{"ast":null,"code":"import _regeneratorRuntime from \"/home/local/ATALINK/thangnd/Desktop/AXON_challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/local/ATALINK/thangnd/Desktop/AXON_challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/local/ATALINK/thangnd/Desktop/AXON_challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport HttpStatus from 'http-status';\nimport { get } from 'lodash';\nexport var internalFetch = function internalFetch(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(resolve, reject) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                // axios.request({ url, ...options, timeout: 20000, withCredentials: true })\n                axios.request(_objectSpread({\n                  url: url\n                }, options, {\n                  timeout: 20000\n                })).then(function (resp) {\n                  if (resp.status === 204) {\n                    resolve(null);\n                  } else if (resp.status === HttpStatus.NOT_FOUND) {\n                    reject({\n                      status: resp.status\n                    });\n                  } else {\n                    resolve(resp.data);\n                  }\n                }).catch(function (err) {\n                  var status = get(err, 'response.status');\n                  var error = get(err, 'response.data');\n                  reject({\n                    status: status,\n                    error: error\n                  });\n                });\n              } catch (error) {\n                reject(error);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};\nexport var internalFetchWithUrl = function internalFetchWithUrl(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(resolve, reject) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              try {\n                axios.request(_objectSpread({\n                  url: url\n                }, options, {\n                  timeout: 20000,\n                  withCredentials: true\n                })).then(function (resp) {\n                  if (resp.status === 204) {\n                    resolve(null);\n                  } else if (resp.status === HttpStatus.NOT_FOUND) {\n                    reject({\n                      status: resp.status\n                    });\n                  } else {\n                    resolve({\n                      data: resp.data,\n                      originalUrl: url\n                    });\n                  }\n                }).catch(function (err) {\n                  var status = get(err, 'response.status');\n                  var error = get(err, 'response.data');\n                  reject({\n                    status: status,\n                    error: error\n                  });\n                });\n              } catch (error) {\n                reject(error);\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n};","map":{"version":3,"sources":["/home/local/ATALINK/thangnd/Desktop/AXON_challenge/src/utils/fetchHelpers/fetchUtils.js"],"names":["axios","HttpStatus","get","internalFetch","url","options","Promise","resolve","reject","request","timeout","then","resp","status","NOT_FOUND","data","catch","err","error","internalFetchWithUrl","withCredentials","originalUrl"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport HttpStatus from 'http-status';\nimport { get } from 'lodash';\n\nexport const internalFetch = (url, options = {}) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // axios.request({ url, ...options, timeout: 20000, withCredentials: true })\n      axios.request({ url, ...options, timeout: 20000 })\n        .then((resp) => {\n          if (resp.status === 204) {\n            resolve(null);\n          } else if (resp.status === HttpStatus.NOT_FOUND) {\n            reject({ status: resp.status });\n          } else {\n            resolve(resp.data);\n          }\n        }).catch((err) => {\n          const status = get(err, 'response.status');\n          const error = get(err, 'response.data');\n          reject({ status, error });\n        });\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const internalFetchWithUrl = (url, options = {}) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      axios.request({ url, ...options, timeout: 20000, withCredentials: true })\n        .then((resp) => {\n          if (resp.status === 204) {\n            resolve(null);\n          } else if (resp.status === HttpStatus.NOT_FOUND) {\n            reject({ status: resp.status });\n          } else {\n            resolve({ data: resp.data, originalUrl: url });\n          }\n        }).catch((err) => {\n          const status = get(err, 'response.status');\n          const error = get(err, 'response.data');\n          reject({ status, error });\n        });\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}