{"ast":null,"code":"import scStyled, { css as css$1, createGlobalStyle as createGlobalStyle$1, ThemeContext, ThemeProvider } from 'styled-components';\nexport { ServerStyleSheet, StyleSheetConsumer, StyleSheetContext, StyleSheetManager, ThemeConsumer, ThemeContext, ThemeProvider, isStyledComponent, keyframes, withTheme } from 'styled-components';\nimport { flattenStrings } from '@xstyled/util';\nimport { transform, createBox, createColorModeProvider, createColorStyles, useThemeBreakpoints, useThemeBreakpoint, useThemeUp, useThemeDown } from '@xstyled/core';\nexport { getColorModeInitScriptElement, getColorModeInitScriptTag, useColorMode, useViewportWidth } from '@xstyled/core';\nimport _taggedTemplateLiteralLoose from '@babel/runtime/helpers/esm/taggedTemplateLiteralLoose';\nimport React from 'react';\nimport { createSystemComponent } from '@xstyled/system';\nexport * from '@xstyled/system';\n/* eslint-disable no-continue, no-loop-func, no-cond-assign */\n\nfunction css() {\n  var scCssArgs = css$1.apply(void 0, arguments);\n  var flattenedArgs = flattenStrings(scCssArgs);\n  return flattenedArgs.map(transform);\n}\n\nvar createGlobalStyle = function createGlobalStyle() {\n  return createGlobalStyle$1([css.apply(void 0, arguments)]);\n};\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\", \"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction getCreateStyle(baseCreateStyle) {\n  var createStyle = function createStyle() {\n    return baseCreateStyle(_templateObject(), css.apply(void 0, arguments));\n  };\n\n  createStyle.attrs = function (attrs) {\n    var nextCreateStyle = baseCreateStyle.attrs(attrs);\n    return getCreateStyle(nextCreateStyle);\n  };\n\n  createStyle.withConfig = function (config) {\n    var nextCreateStyle = baseCreateStyle.withConfig(config);\n    return getCreateStyle(nextCreateStyle);\n  };\n\n  return createStyle;\n}\n\nfunction styled(component) {\n  return getCreateStyle(scStyled(component));\n}\n\nvar InnerBox =\n/*#__PURE__*/\ncreateSystemComponent(React);\nvar Box =\n/*#__PURE__*/\nstyled(InnerBox)(createBox);\nstyled.box =\n/*#__PURE__*/\nstyled(Box);\nObject.keys(scStyled).forEach(function (key) {\n  styled[key] = styled(key);\n  styled[key + \"Box\"] = styled(Box.withComponent(createSystemComponent(React, key)));\n});\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteralLoose([\"\", \"\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar ColorModeStyle =\n/*#__PURE__*/\ncreateGlobalStyle$1(\n/*#__PURE__*/\n_templateObject$1(), function (p) {\n  return createColorStyles(p.theme, {\n    targetSelector: p.targetSelector\n  });\n});\nvar ColorModeProvider =\n/*#__PURE__*/\ncreateColorModeProvider({\n  ThemeContext: ThemeContext,\n  ThemeProvider: ThemeProvider,\n  ColorModeStyle: ColorModeStyle\n});\n\nfunction useTheme() {\n  return React.useContext(ThemeContext);\n}\n\nfunction useBreakpoints() {\n  return useThemeBreakpoints(useTheme());\n}\n\nfunction useBreakpoint() {\n  return useThemeBreakpoint(useTheme());\n}\n\nfunction useUp(key) {\n  return useThemeUp(useTheme(), key);\n}\n\nfunction useDown(key) {\n  return useThemeDown(useTheme(), key);\n}\n\nexport default styled;\nexport { Box, ColorModeProvider, createGlobalStyle, css, useBreakpoint, useBreakpoints, useDown, useTheme, useUp };","map":null,"metadata":{},"sourceType":"module"}