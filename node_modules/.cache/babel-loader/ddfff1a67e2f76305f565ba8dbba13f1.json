{"ast":null,"code":"import _defineProperty from \"/home/local/ATALINK/thangnd/Desktop/AXON_challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/local/ATALINK/thangnd/Desktop/AXON_challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { internalFetch, internalFetchWithUrl } from './fetchUtils';\n\nvar getAsync = function getAsync(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return internalFetch(url, _objectSpread({}, options, {\n    method: 'GET'\n  }));\n};\n\nvar getWithUrlAsync = function getWithUrlAsync(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return internalFetchWithUrl(url, _objectSpread({}, options, {\n    method: 'GET'\n  }));\n};\n\nvar postAsync = function postAsync(url, data) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return internalFetch(url, _objectSpread({}, options, {\n    method: 'POST',\n    data: data\n  }));\n};\n\nvar putAsync = function putAsync(url, data) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return internalFetch(url, _objectSpread({}, options, {\n    method: 'PUT',\n    data: data\n  }));\n};\n\nvar patchAsync = function patchAsync(url, data) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return internalFetch(url, _objectSpread({}, options, {\n    method: 'PATCH',\n    data: data\n  }));\n};\n\nvar deleteAsync = function deleteAsync(url, data) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return internalFetch(url, _objectSpread({}, options, _defineProperty({\n    method: 'DELETE'\n  }, data ? 'data' : null, data)));\n};\n\nexport { getAsync, postAsync, putAsync, patchAsync, deleteAsync, getWithUrlAsync };","map":{"version":3,"sources":["/home/local/ATALINK/thangnd/Desktop/AXON_challenge/src/utils/fetchHelpers/index.js"],"names":["internalFetch","internalFetchWithUrl","getAsync","url","options","method","getWithUrlAsync","postAsync","data","putAsync","patchAsync","deleteAsync"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,oBAAxB,QAAoD,cAApD;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAuB;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AAAE,SAAOJ,aAAa,CAACG,GAAD,oBAAWC,OAAX;AAAoBC,IAAAA,MAAM,EAAE;AAA5B,KAApB;AAA2D,CAArG;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACH,GAAD,EAAuB;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AAAE,SAAOH,oBAAoB,CAACE,GAAD,oBAAWC,OAAX;AAAoBC,IAAAA,MAAM,EAAE;AAA5B,KAA3B;AAAkE,CAAnH;;AAEA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACJ,GAAD,EAAMK,IAAN,EAA6B;AAAA,MAAjBJ,OAAiB,uEAAP,EAAO;AAC7C,SAAOJ,aAAa,CAACG,GAAD,oBAAWC,OAAX;AAAoBC,IAAAA,MAAM,EAAE,MAA5B;AAAoCG,IAAAA,IAAI,EAAJA;AAApC,KAApB;AACD,CAFD;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACN,GAAD,EAAMK,IAAN,EAA6B;AAAA,MAAjBJ,OAAiB,uEAAP,EAAO;AAC5C,SAAOJ,aAAa,CAACG,GAAD,oBAAWC,OAAX;AAAoBC,IAAAA,MAAM,EAAE,KAA5B;AAAmCG,IAAAA,IAAI,EAAJA;AAAnC,KAApB;AACD,CAFD;;AAGA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACP,GAAD,EAAMK,IAAN,EAA6B;AAAA,MAAjBJ,OAAiB,uEAAP,EAAO;AAC9C,SAAOJ,aAAa,CAACG,GAAD,oBAAWC,OAAX;AAAoBC,IAAAA,MAAM,EAAE,OAA5B;AAAqCG,IAAAA,IAAI,EAAJA;AAArC,KAApB;AACD,CAFD;;AAGA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACR,GAAD,EAAMK,IAAN,EAA6B;AAAA,MAAjBJ,OAAiB,uEAAP,EAAO;AAC/C,SAAOJ,aAAa,CAACG,GAAD,oBACfC,OADe;AAElBC,IAAAA,MAAM,EAAE;AAFU,KAGjBG,IAAI,GAAG,MAAH,GAAY,IAHC,EAGMA,IAHN,GAApB;AAKD,CAND;;AAQA,SACEN,QADF,EAEEK,SAFF,EAGEE,QAHF,EAIEC,UAJF,EAKEC,WALF,EAMEL,eANF","sourcesContent":["import { internalFetch, internalFetchWithUrl } from './fetchUtils';\n\nconst getAsync = (url, options = {}) => { return internalFetch(url, { ...options, method: 'GET' }); };\n\nconst getWithUrlAsync = (url, options = {}) => { return internalFetchWithUrl(url, { ...options, method: 'GET' }); };\n\nconst postAsync = (url, data, options = {}) => {\n  return internalFetch(url, { ...options, method: 'POST', data });\n};\nconst putAsync = (url, data, options = {}) => {\n  return internalFetch(url, { ...options, method: 'PUT', data });\n};\nconst patchAsync = (url, data, options = {}) => {\n  return internalFetch(url, { ...options, method: 'PATCH', data });\n};\nconst deleteAsync = (url, data, options = {}) => {\n  return internalFetch(url, {\n    ...options,\n    method: 'DELETE',\n    [data ? 'data' : null]: data,\n  });\n};\n\nexport {\n  getAsync,\n  postAsync,\n  putAsync,\n  patchAsync,\n  deleteAsync,\n  getWithUrlAsync,\n};\n"]},"metadata":{},"sourceType":"module"}